<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacego__to__point" kind="namespace" language="Python">
    <compoundname>go_to_point</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacego__to__point_1a91dbaab25e6080f6b5dbf82cac6ce75c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>int go_to_point::position_</definition>
        <argsstring></argsstring>
        <name>position_</name>
        <initializer>=  Point()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="44" column="1" bodyfile="scripts/go_to_point.py" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1ae444f19eb2019982432760ace036ce03" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.yaw_</definition>
        <argsstring></argsstring>
        <name>yaw_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="49" column="1" bodyfile="scripts/go_to_point.py" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1aa2d0ef255bcf5d5faf9ca2764730fb17" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.state_</definition>
        <argsstring></argsstring>
        <name>state_</name>
        <initializer>=  0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="59" column="1" bodyfile="scripts/go_to_point.py" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a57b4090d0abcbcf0bfa2bcb9329d3036" prot="public" static="no" mutable="no">
        <type></type>
        <definition>go_to_point.pub_</definition>
        <argsstring></argsstring>
        <name>pub_</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="64" column="1" bodyfile="scripts/go_to_point.py" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a67f95834f0959feb3facd17bc7fa2b38" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.yaw_precision_</definition>
        <argsstring></argsstring>
        <name>yaw_precision_</name>
        <initializer>=  math.pi / 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="69" column="1" bodyfile="scripts/go_to_point.py" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1af74ccf49164d0478ca8343e2031d5813" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int go_to_point.yaw_precision_2_</definition>
        <argsstring></argsstring>
        <name>yaw_precision_2_</name>
        <initializer>=  math.pi / 90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="74" column="1" bodyfile="scripts/go_to_point.py" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a6a1e4eb20ebd4fce0fc56b0ebfd7a8d5" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.dist_precision_</definition>
        <argsstring></argsstring>
        <name>dist_precision_</name>
        <initializer>=  0.1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="79" column="1" bodyfile="scripts/go_to_point.py" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a524106fc7667a0927951dfd89d52d6a7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.kp_a</definition>
        <argsstring></argsstring>
        <name>kp_a</name>
        <initializer>=  -3.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="84" column="1" bodyfile="scripts/go_to_point.py" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a7bc498652ca66932e704e738b50c297b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.kp_d</definition>
        <argsstring></argsstring>
        <name>kp_d</name>
        <initializer>=  0.2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="89" column="1" bodyfile="scripts/go_to_point.py" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1acb4e14986fafe5cb73bb8ad0c178869d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.ub_a</definition>
        <argsstring></argsstring>
        <name>ub_a</name>
        <initializer>=  0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="94" column="1" bodyfile="scripts/go_to_point.py" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1afecad4058844db05d8321199e25b4498" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.lb_a</definition>
        <argsstring></argsstring>
        <name>lb_a</name>
        <initializer>=  -0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="99" column="1" bodyfile="scripts/go_to_point.py" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a16c473b9e717200c483d18e66b48152a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float go_to_point.ub_d</definition>
        <argsstring></argsstring>
        <name>ub_d</name>
        <initializer>=  0.6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="104" column="1" bodyfile="scripts/go_to_point.py" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacego__to__point_1a2017a478ea0eb9380bed961db601f95d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>go_to_point.action_server</definition>
        <argsstring></argsstring>
        <name>action_server</name>
        <initializer>=  None</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="109" column="1" bodyfile="scripts/go_to_point.py" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacego__to__point_1ab67d5248fa9314fd19feebdb901e70ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.clbk_consts</definition>
        <argsstring>(msg_consts)</argsstring>
        <name>clbk_consts</name>
        <param>
          <type>msg_consts</type>
          <defname>msg_consts</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Callback function used to update the linear and angular constants
    used during the motion.

    Args:
        msg_consts ([float,float]): contains the new linear and angular constants </verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="114" column="1" bodyfile="scripts/go_to_point.py" bodystart="114" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a36304a9f313b0579f7fc69fa01695524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.clbk_odom</definition>
        <argsstring>(msg)</argsstring>
        <name>clbk_odom</name>
        <param>
          <type>msg</type>
          <defname>msg</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Callback function used to check the actual position of the 
    robot through the odom message received.
    
    Args:
        msg (Odometry): contains the position and orientation of the robot</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="128" column="1" bodyfile="scripts/go_to_point.py" bodystart="128" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a31ee48e5cae36821049b572a96b7c8be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.change_state</definition>
        <argsstring>(state)</argsstring>
        <name>change_state</name>
        <param>
          <type>state</type>
          <defname>state</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used to change the state of the go_to_point service.
    
    Args:
        state (int): new machine state
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="153" column="1" bodyfile="scripts/go_to_point.py" bodystart="153" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ac688bb56fa84763ea2edefc30cae032a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.normalize_angle</definition>
        <argsstring>(angle)</argsstring>
        <name>normalize_angle</name>
        <param>
          <type>angle</type>
          <defname>angle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used to normalize the angle
    
    Args:
        angle (float): angle to normalize
        
    Returns:
        angle (float): angle, passed as parameter, normalized</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="165" column="1" bodyfile="scripts/go_to_point.py" bodystart="165" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a9c3011a3065fcbefcc1c5ad8c9979669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.fix_yaw</definition>
        <argsstring>(des_pos)</argsstring>
        <name>fix_yaw</name>
        <param>
          <type>des_pos</type>
          <defname>des_pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used to fix the actual yaw angle in order to allow
    the robot to go straight to the goal.
    If the yaw angle is correct (checking also the precision)
    the robot changes the state in &quot;go_straight_ahead&quot;.

    Args:
        des_pos (Point): actual goal position used to fix the yaw angle of the robot.</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="181" column="1" bodyfile="scripts/go_to_point.py" bodystart="181" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ac8579665c0fbf665f734476554fac37d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.go_straight_ahead</definition>
        <argsstring>(des_pos)</argsstring>
        <name>go_straight_ahead</name>
        <param>
          <type>des_pos</type>
          <defname>des_pos</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used to go straight ahead to the goal position.
    If the robot reaches the goal position (checking also the
    precision) changes the state in &quot;fix the final yaw angle&quot;.
    
    Args:
        des_pos (Point): goal position used to allow the robot to
                   reach the desired position</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="213" column="1" bodyfile="scripts/go_to_point.py" bodystart="213" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a4a406386ca62830c19c93949e923f7bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.fix_final_yaw</definition>
        <argsstring>(des_yaw)</argsstring>
        <name>fix_final_yaw</name>
        <param>
          <type>des_yaw</type>
          <defname>des_yaw</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used to fix the final yaw angle of the robot in
    order to reach the final goal position and orientation.
    If the angle is aligned with the des_yaw it changes the state
    in &quot;Target reached&quot;.
    
    Args:
        des_yaw (float): desired yaw final angle to be reached 
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="250" column="1" bodyfile="scripts/go_to_point.py" bodystart="250" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ac2587220a4ac9c845bc9c5b0b45d5835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.done</definition>
        <argsstring>()</argsstring>
        <name>done</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used to stop the robot publishing 0 velocity on the
    topic cmd_vel.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="278" column="1" bodyfile="scripts/go_to_point.py" bodystart="278" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1a2203d17b7e563bee20ed4c988548df45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.go_to_point</definition>
        <argsstring>(goal)</argsstring>
        <name>go_to_point</name>
        <param>
          <type>goal</type>
          <defname>goal</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Function used by the action server to manage the behaviour
    of the robot.
    The function, for each cycle, checks if the goal was canceled
    and checks the actual state in order to perform the correct
    function.
    
    Args:
        goal: goal position and orientation received.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="289" column="1" bodyfile="scripts/go_to_point.py" bodystart="289" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="namespacego__to__point_1ab92bd6db1ec323a4d795ed6cb40aebe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def go_to_point.main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>    Main function that create a publisher on the topic cmd_vel,
    in order to publish new velocities, a subscriber on the
    topic odom, in order to read the actual position of the
    robot and start the action server.
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="scripts/go_to_point.py" line="356" column="1" bodyfile="scripts/go_to_point.py" bodystart="356" bodyend="376"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>.. module:: go_to_point
    :platform Unix
    _synopsis: Python module for piloting the robot to the target
    
.. moduleauthor:: Enrico Fiasche&apos; enrico.fiasche@gmail.com

This node drive the robot to the desired position received

Subscribes to:
    /odom topic where the simulator publishes the robot position
    /consts topic where the node receives the values of lin and ang constants

Publishes to:
    /cmd_vel the desired robot position

Action server:
    /go_to_point to start the robot motion

This node is an action server used to reach a given goal.
This node use a publisher, which publishes the velocity of the robot
through the cmd_vel topic, and a subscriber, which checks the position
of the robot through the odom topic. If a new goal is set, this node
fix the yaw angle in order to be aligned with the goal, then the robot
can go straight towards the target point and finally, when the robot
is near the desired position, it can fix the final yaw angle in order
to have the same orientation of the given goal. During these operations,
the node checks continuously if the goal is canceled in order to stop
the robot.</verbatim> </para>
    </detaileddescription>
    <location file="scripts/go_to_point.py" line="1" column="1"/>
  </compounddef>
</doxygen>
